{
    "todo-tree.tree.showCountsInTree": true,
    "todo-tree.tree.showBadges": true,
    "yaml.customTags": [
        "!Condition sequence",
        "!Context scalar",
        "!Enumerate sequence",
        "!Env scalar",
        "!Find sequence",
        "!Format sequence",
        "!If sequence",
        "!Index scalar",
        "!KeyOf scalar",
        "!Value scalar",
        "!AtIndex scalar"
    ],
    "typescript.preferences.importModuleSpecifier": "non-relative",
    "typescript.preferences.importModuleSpecifierEnding": "index",
    "typescript.tsdk": "./node_modules/typescript/lib",
    "typescript.enablePromptUseWorkspaceTsdk": true,
    "yaml.schemas": {
        "./blueprints/schema.json": "blueprints/**/*.yaml"
    },
    "gitlens.autolinks": [
        {
            "alphanumeric": true,
            "prefix": "#<num>",
            "url": "https://github.com/goauthentik/authentik/issues/<num>",
            "ignoreCase": false
        }
    ],
    "go.testFlags": ["-count=1"],
    "github-actions.workflows.pinned.workflows": [".github/workflows/ci-main.yml"],

    "eslint.useFlatConfig": true,

    "explorer.fileNesting.enabled": true,
    "explorer.fileNesting.patterns": {
        "*.cjs": "*.d.cts",
        "package.json": "package-lock.json, yarn.lock, .yarnrc, .yarnrc.yml, .yarn, .nvmrc, .node-version",
        "tsconfig.json": "tsconfig.*.json, jsconfig.json"
    },

    "search.exclude": {
        "**/node_modules": true,
        "**/*.code-search": true,
        "**/dist": true,
        "**/out": true,
        "**/package-lock.json": true
    },

    "[css]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascriptreact]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[json]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[markdown]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[shellscript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescriptreact]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "editor.codeActionsOnSave": {
        "source.removeUnusedImports": "explicit"
    },
    // We use Prettier for formatting, but specifying these settings
    // will ensure that VS Code's IntelliSense doesn't autocomplete unformatted code.
    "javascript.format.semicolons": "insert",
    "typescript.format.semicolons": "insert",
    "javascript.preferences.quoteStyle": "double",
    "typescript.preferences.quoteStyle": "double"
}
